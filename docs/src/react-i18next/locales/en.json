{
  "markdown": {
    "next": "Next:",
    "previous": "Previous:"
  },
  "header": {
    "lingjie": "Lingjie",
    "home": "Home",
    "quick-start": "Quick Start",
    "more": "More"
  },
  "footer": {
    "lingjie": "Lingjie",
    "description": "This website runs in lingjie micro-frontend"
  },
  "index": {
    "title": "Lingjie(零界): A Zero-cost way To Implement Micro-frontend",
    "subtitle": "It enables users to switch different apps back and forth smoothly without page refreshing, just like SPA, and simulates the switch effect of web view in the native app.",
    "card": {
      "1": {
        "title": "No need to rewrite the existing app",
        "description": "Technology agnostic. No worries about the difficulty of development."
      },
      "2": {
        "title": "Only one line of code is needed",
        "description": "Every web page only needs to import one script file to join the lingjie micro-frontend."
      },
      "3": {
        "title": "Switch pages without refreshing",
        "description": "Users could switch different web pages back and forth without refreshing and get consistent UX via lingjie."
      },
      "4": {
        "title": "Safe & strong",
        "description": "Every web page can disconnect lingjie micro-frontend at any time."
      },
      "5": {
        "title": "State Synchronization",
        "description": "Refreshing page will not lose its routing state. All web pages could remain in their original state, such as scroll bar position, and show rapidly when back to the previous page."
      },
      "6": {
        "title": "Perfect isolation",
        "description": "Lingjie isolates both styles and scripts perfectly and avoids namespace pollution among different pages."
      }
    },
    "button": "Quick Start"
  },
  "quick-start": {
    "title": "Quick Start",
    "more": "More"  
  },
  "usage-index": {
    "title": "Introduction to Lingjie Micro-frontend",
    "subtitle": "There is a trade-off between zero-cost implementation and the scope of application. In general, the pages that follow the best practice of modern web development tend to join lingjie without additional modification. The solution to particular cases and FAQs are listed below."
  },
  "how-lingjie-works": "How Lingjie Works",
  "lingjie-shell-and-lingjie-page": "Lingjie-shell & Lingjie-page",
  "lingjie-config-rule": "Lingjie Rule Config",
  "lingjie-data-attrs": "Lingjie HTML Attribute",
  "disable-lingjie-temporarily": "How to Disable Lingjie Temporarily",
  "lingjie-JS-API": "Lingjie JS API"
}